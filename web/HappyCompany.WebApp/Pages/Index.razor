@page "/"

@layout EmptyLayout

@using HappyCompany.WebApp.Services.Interfaces 

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading) 
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private LoginDto model = new LoginDto();
    private bool loading;
    private UserDto userDto;

    [Inject]
    public IUserService userService { get; set; }
    [Inject]
    NavigationManager NavigationManager { get; set; }

     [Inject]
    IAlertService AlertService { get; set; }

    private async void OnValidSubmit()
    {
        
            userDto= await userService.Login(model);
            if(userDto != null)
            NavigationManager.NavigateTo("user/list");
            else
            AlertService.Error("invalid Login data");
        
    }

}
