<h3>Warehouses</h3>
@page "/Item/Add/{Id}"

@using HappyCompany.WebApp.Services.Interfaces;
@using HappyCompany.Domain.Models;

<EditForm Model="@itemobj"  OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3>Add New Item</h3>
    <hr />

    <div class="form-group row">
        <label for="ItemName" class="col-sm-2 col-form-label">
             Name
        </label>
        <div class="col-sm-10">
            <InputText id="ItemName" class="form-control" placeholder="Name"
                       @bind-Value="itemobj.Name" />
        </div>
    </div>
    <div class="form-group row">
        <label for="SKUCode" class="col-sm-2 col-form-label">
            SKUCode
        </label>
        <div class="col-sm-10">
            <InputText id="SKUCode" class="form-control" placeholder="SKUCode"
                       @bind-Value="itemobj.SKUCode" />
        </div>
    </div>
   
     <div class="form-group row">
        <label for="ItemQty" class="col-sm-2 col-form-label">
            Qty
        </label>
        <div class="col-sm-10">
            <InputNumber id="ItemQty" class="form-control" placeholder="Qty"
                       @bind-Value="itemobj.Qty" />
        </div>
    </div>
    <div class="form-group row">
        <label for="MSRPPrice" class="col-sm-2 col-form-label">
            MSRPPrice
        </label>
        <div class="col-sm-10">
            <InputNumber id="MSRPPrice" class="form-control" placeholder="MSRPPrice"
                       @bind-Value="itemobj.MSRPPrice" />
        </div>
    </div>
     <div class="form-group row">
        <label for="MSRPPrice" class="col-sm-2 col-form-label">
            CostPrice
        </label>
        <div class="col-sm-10">
            <InputNumber id="CostPrice" class="form-control" placeholder="CostPrice"
                       @bind-Value="itemobj.CostPrice" />
        </div>
    </div>
    <button type="submit">Submit</button>
</EditForm>

@code {
    public Item itemobj = new Item();
    [Parameter]
    public string Id { get; set; }
    [Inject]
    public IItemService itemService { get; set; }
    private async Task HandleValidSubmit()
    {
        //int.TryParse(Id, out int idWarehouse);
        itemobj.warehouseId = int.Parse(Id);
        await itemService.Add(itemobj);
    }
}