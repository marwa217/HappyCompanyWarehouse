
@page "/warehouse/Add"

@using HappyCompany.Domain.Data;
@using HappyCompany.WebApp.Services.Interfaces;
@using HappyCompany.Infra.Constants;

<EditForm Model="@WareHouseDto"  OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3 style="color:blue">Add New WareHouse</h3>
    <hr />
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">
             Name
        </label>
        <div class="col-sm-10">
            <InputText id="firstName" class="form-control" placeholder="Name"
                       @bind-Value="WareHouseDto.Name" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Country
        </label>
        <div class="col-sm-10">
            <InputSelect class="form-control" @bind-Value="WareHouseDto.Country">
                <option value="">Select Country ...</option>
                @foreach(var (key, value) in Countries.CountriyList )
                {
                     <option value="@key">@value</option>
                    // do something with entry.Value or entry.Key
                }
            </InputSelect>
 
        </div>

    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            City
        </label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="City"
                       @bind-Value="WareHouseDto.City" />
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
           Address
        </label>
        <div class="col-sm-10">
            <InputText id="lastName" class="form-control" placeholder="Address"
                       @bind-Value="WareHouseDto.Address" />
        </div>
    </div>
    <button type="submit">Submit</button>
</EditForm>
<br/>
 <NavLink href="/warehouse/list">back</NavLink><br />
@code {
    public WarehouseDto WareHouseDto = new WarehouseDto();
    [Inject]
    public IWareHouseService WareHouse { get; set; }
    private async Task HandleValidSubmit()
    {
         await WareHouse.Add(WareHouseDto);
         WareHouseDto = new WarehouseDto();
    }


}